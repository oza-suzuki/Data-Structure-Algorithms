/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Pair{
    public:
        int ht;
        int dia;
};

class Solution {
public:
    
    Pair Diameter(TreeNode* root)
    {
        Pair p;
        
        if(root == NULL){
            p.ht = p.dia = 0;
            return p;
        }
        
        Pair left = Diameter(root->left);
        Pair right = Diameter(root->right);
        
        p.ht = max(left.ht, right.ht) + 1;
        p.dia = max({left.dia, right.dia, left.ht + right.ht});
        
        return p;
    }
    
    
    int diameterOfBinaryTree(TreeNode* root) {
        Pair ans = Diameter(root);
        return ans.dia;
    }
};