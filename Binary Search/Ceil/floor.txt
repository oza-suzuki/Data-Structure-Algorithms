// C++ program to implement recursive Binary Search
#include <bits/stdc++.h>
using namespace std;

// A iterative binary search function. It returns
// location of x in given array arr[l..r] if present,
// otherwise -1
int binarySearch(int arr[], int l, int r, int x)
{
    int n = r+1;
	while (l <= r) {
		int m = l + (r - l) / 2;

		// Check if x is present at mid
		if (arr[m] == x)
			return arr[m];


		// If x is smaller, ignore right half
		else if(arr[m] > x)
        {
            r = m - 1;
        }
        
        // If x greater, ignore left half
		else
			l = m + 1;
			
	}

	// if we reach here, then element was
	// not present
    
	// return arr[r];
    if(arr[r] < arr[n-1])
        return arr[l];
    
    else
        return -1;
}

int main()
{
	int arr[] = { 2, 3, 4, 10, 40, 60, 80 };
	int x = 81;
	int n = sizeof(arr) / sizeof(arr[0]);
	int result = binarySearch(arr, 0, n - 1, x);
	(result == -1) ? cout << "Element is not present in array"
				: cout << "Element is  " << result;
	return 0;
}