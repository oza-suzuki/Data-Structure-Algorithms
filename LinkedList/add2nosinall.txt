/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        if(!l1)
            return l2;
        
        else if(!l2)
            return l1;
        
        ListNode  *dummy = new ListNode(-1);
        int c = 0;
        ListNode *temp = dummy;
        while(l1 && l2)
        {
            int sum = l1->val + l2->val + c;
            c = sum / 10;
            sum = sum % 10;
            ListNode *newnode = new ListNode(sum);
            dummy->next = newnode;
            dummy = dummy->next;
            l1 = l1->next;
            l2 = l2->next;
        }
        
        
        while(l1)
        {
            int sum = l1->val + c;
            
            c = sum / 10;
            
            sum = sum % 10;
            dummy->next = new ListNode(sum);
            dummy = dummy->next;
            l1 = l1->next;
        }
        
        while(l2)
        {
            int sum = l2->val + c;
             
            c = sum / 10;
            sum = sum % 10;
            
            dummy->next = new ListNode(sum); 
            dummy = dummy->next;
            l2 = l2->next;
        }
        
        if(c)
        {
           dummy->next  = new ListNode(c);
        }
        
        return temp->next;
    }
};